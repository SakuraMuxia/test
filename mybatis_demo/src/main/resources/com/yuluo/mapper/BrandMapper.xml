<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

    <!--名称空间-->
<mapper namespace="com.yuluo.mapper.BrandMapper">
    
    <!--statement 没有提示sql数据库名称的话，设置sql方言-->
    <!--使用sql片段 实现其别名-->
    <!--
    <sql id="brand_column">
         id , brand_name, company_name as companyName, ordered, description, status
    </sql>
    <select id="selectAll" resultType="brand">
        select
        <include refid="brand_column"/>
        from tb_brand;
    </select>
    -->

    <!--使用resultMap实现起别名-->
    <!-- ResultMap id 唯一标识 type 映射的类型 -->
    <resultMap id="brandResultMap" type="brand">
        <!--column：列的名称，Properties：实体类属性的名称-->
        <!--id 完成主键字段的映射，result 完成一般字段的映射-->
        <result column="company_name" property="companyName"/>
        <result column="brand_name" property="brandName"/>
    </resultMap>


    <!--查询所有-->
    <!--定义resultMap标签，在select标签中使用resultMap属性替换，resultType属性-->
    <select id="selectAll" resultMap="brandResultMap">
        select
        *
        from tb_brand;
    </select>

    <!--查询详情-->
    <!--parameterType="int" 可以省略-->
    <select id="selectById"  resultMap="brandResultMap">
        select *
        from tb_brand where id = #{id};
    </select>


    <!--条件查询-->
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        where
            status = #{status}
        and company_name like #{companyName}
        and brand_name like #{brandName};
    </select>






</mapper>