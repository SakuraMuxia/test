<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

    <!--名称空间-->
<mapper namespace="com.yuluo.mapper.BrandMapper">
    
    <!--statement 没有提示sql数据库名称的话，设置sql方言-->
    <!--使用sql片段 实现其别名-->
    <!--
    <sql id="brand_column">
         id , brand_name, company_name as companyName, ordered, description, status
    </sql>
    <select id="selectAll" resultType="brand">
        select
        <include refid="brand_column"/>
        from tb_brand;
    </select>
    -->

    <!--使用resultMap实现起别名-->
    <!-- ResultMap id 唯一标识 type 映射的类型 -->
    <resultMap id="brandResultMap" type="brand">
        <!--column：列的名称，Properties：实体类属性的名称-->
        <!--id 完成主键字段的映射，result 完成一般字段的映射-->
        <result column="company_name" property="companyName"/>
        <result column="brand_name" property="brandName"/>
    </resultMap>



    <!--查询所有-->
    <!--定义resultMap标签，在select标签中使用resultMap属性替换，resultType属性-->
    <select id="selectAll" resultMap="brandResultMap">
        select
        *
        from tb_brand;
    </select>

    <!--查询详情-->
    <!--parameterType="int" 可以省略-->
    <select id="selectById"  resultMap="brandResultMap">
        select *
        from tb_brand where id = #{id}
    </select>

    <!--条件查询-->
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        where
            status = #{status}
        and company_name like #{companyName}
        and brand_name like #{brandName}
    </select>

    <!--动态条件查询-->
    <select id="selectByConditionDynamic" resultMap="brandResultMap">
        select *
        from tb_brand
        /*where 1=1*/
        <where>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="companyName != null and companyName != ''">
                and company_name like #{companyName}
            </if>
            <if test="brandName != null and brandName != ''">
                and brand_name like #{brandName}
            </if>
        </where>
    </select>
    <!--
    动态条件查询2 单个条件的时候
    <choose>相当于switch,相当于case,test是条件
    -->
    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
        <choose>
            <when test="status != null">
                status = #{status}
            </when>
            <when test="companyName != null and companyName != ''">
                company_name like #{companyName}
            </when>
            <when test="brandName != null and brandName != ''">
                brand_name like #{brandName}
            </when>
        </choose>
        </where>
    </select>

    <!--添加sql-->
    <!--获取主键ID的值-->
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand (brand_name, company_name, ordered, description, status)
        values (#{brandName},#{companyName},#{ordered},#{description},#{status});

    </insert>

    <!--修改全部字段sql-->
    <update id="update">
        update tb_brand
        <set>
            <if test="brandName != null and brandName != ''">
                brand_name = #{brandName},
            </if>
            <if test="companyName != null and companyName != ''">
                company_name = #{companyName},
            </if>
            <if test="ordered != null">
                ordered = #{ordered},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="status != null">
                status = #{status}
            </if>
        </set>
        where id = #{id};
    </update>

    <!--删除sql功能-->
    <delete id="deleteById">
        delete
        from tb_brand
        where id = #{id};
    </delete>
    <!--批量删除数组-->
    <delete id="deleteByIds">
        delete
        from tb_brand
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        ;
    </delete>


</mapper>